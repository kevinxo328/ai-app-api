# Use the official Python base image
FROM python:3.9-slim

# Set environment variables
ARG OPENAI_API_TYPE="azure"
ENV OPENAI_API_TYPE=${OPENAI_API_TYPE}
RUN echo $OPENAI_API_TYPE

ARG OPENAI_API_VERSION="2023-05-15"
ENV OPENAI_API_VERSION=${OPENAI_API_VERSION}
RUN echo $OPENAI_API_VERSION

ARG OPENAI_API_KEY
ENV OPENAI_API_KEY=${OPENAI_API_KEY}
RUN echo $OPENAI_API_KEY

ARG OPENAI_API_ENDPOINT
ENV OPENAI_API_ENDPOINT=${OPENAI_API_ENDPOINT}
RUN echo $OPENAI_API_ENDPOINT

ARG AZURE_OPENAI_RG
ENV AZURE_OPENAI_RG=${AZURE_OPENAI_RG}
RUN echo $AZURE_OPENAI_RG

ARG AZURE_OPENAI_NAME
ENV AZURE_OPENAI_NAME=${AZURE_OPENAI_NAME}
RUN echo $AZURE_OPENAI_NAME

ARG AZURE_OPENAI_SUBSCRIPTION_ID
ENV AZURE_OPENAI_SUBSCRIPTION_ID=${AZURE_OPENAI_SUBSCRIPTION_ID}
RUN echo $AZURE_OPENAI_SUBSCRIPTION_ID

ARG GPT35_MODEL="gpt-35-turbo"
ENV GPT35_MODEL=${GPT35_MODEL}
RUN echo $GPT35_MODEL

ARG GPT4_MODEL="gpt-4"
ENV GPT4_MODEL=${GPT4_MODEL}
RUN echo $GPT4_MODEL

ARG EMBEDDING_MODEL="text-embedding-ada-002"
ENV EMBEDDING_MODEL=${EMBEDDING_MODEL}
RUN echo $EMBEDDING_MODEL

ARG REDIS_HOST
ENV REDIS_HOST=${REDIS_HOST}
RUN echo $REDIS_HOST

ARG REDIS_PORT
ENV REDIS_PORT=${REDIS_PORT}
RUN echo $REDIS_PORT

ARG REDIS_USER="default"
ENV REDIS_USER=${REDIS_USER}
RUN echo $REDIS_USER

ARG REDIS_PASSWORD
ENV REDIS_PASSWORD=${REDIS_PASSWORD}
RUN echo $REDIS_PASSWORD

ARG SQLALCHEMY_DATABASE_URL
ENV SQLALCHEMY_DATABASE_URL=${SQLALCHEMY_DATABASE_URL}
RUN echo $SQLALCHEMY_DATABASE_URL

ARG ACCESS_TOKEN_SECRET_KEY
ENV TOKEN_SECRET_KEY=${TOKEN_SECRET_KEY}
RUN echo $TOKEN_SECRET_KEY

ARG ACCESS_TOKEN_EXPIRE_MINUTES=30
ENV ACCESS_TOKEN_EXPIRE_MINUTES=${ACCESS_TOKEN_EXPIRE_MINUTES}
RUN echo $ACCESS_TOKEN_EXPIRE_MINUTES

ARG ACCESS_TOKEN_ALGORITHM="HS256"
ENV ACCESS_TOKEN_ALGORITHM=${ACCESS_TOKEN_ALGORITHM}
RUN echo $ACCESS_TOKEN_ALGORITHM

# Set the working directory in the container
WORKDIR /app

# Copy the requirements file to the container
COPY requirements.txt .

# Install the Python dependencies
RUN pip install --no-cache-dir -r requirements.txt

# Copy the application code to the container
COPY . .

# Expose the port that the FastAPI application will run on
EXPOSE 8000

# Start the FastAPI application
CMD ["uvicorn", "main:app", "--host", "0.0.0.0", "--port", "8000"]
